version: '3.7'

services:
  db:
    image: postgres:15
    user: ${POSTGRES_USER}
    container_name: app_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: app_cache
    tty: true
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app_cont
    tty: true
    command: python manage.py migrate && python manage.py add_data && python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    ports:
      - '8001:8000'
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: .
    container_name: app_celery
    tty: true
    command: celery -A config worker -l INFO -S django
    depends_on:
      - app
      - redis

  celery-beat:
    build: .
    container_name: app_celery_beat
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - app
      - redis

volumes:
  pg_data:
